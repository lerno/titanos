module math;

import c2 local;

// NOTE: long double (16 bytes on 64-bit system) not supported yet

func c_double floor(c_double x);
func c_float floorf(c_float x);
//long double floorl(long double x);

func c_double ceil(c_double x);
func c_float ceilf(c_float x);
//long double ceill(long double x);

func c_long lrint(c_double x);
func c_long lrintf(c_float x);
//long int lrintl(long double x);

func c_longlong llrint(c_double x);
func c_longlong llrintf(c_float x);
//long long int llrintl(long double x);

func c_double nearbyint(c_double x);
func c_float nearbyintf(c_float x);
//long double nearbyintl(long double x);

func c_double rint(c_double x);
func c_float rintf(c_float x);
//long double rintl(long double x);

func c_double round(c_double x);
func c_float roundf(c_float x);
//long double roundl(long double x);

func c_double trunc(c_double x);
func c_float truncf(c_float x);
//long double truncl(long double x);

const c_double M_E =        2.7182818284590452354;   /* e */
const c_double M_LOG2E =    1.4426950408889634074;   /* log_2 e */
const c_double M_LOG10E =   0.43429448190325182765;  /* log_10 e */
const c_double M_LN2 =      0.69314718055994530942;  /* log_e 2 */
const c_double M_LN10 =     2.30258509299404568402;  /* log_e 10 */
const c_double M_PI =       3.14159265358979323846;  /* pi */
const c_double M_PI_2 =     1.57079632679489661923;  /* pi/2 */
const c_double M_PI_4 =     0.78539816339744830962;  /* pi/4 */
const c_double M_1_PI =     0.31830988618379067154;  /* 1/pi */
const c_double M_2_PI =     0.63661977236758134308;  /* 2/pi */
const c_double M_2_SQRTPI = 1.12837916709551257390;  /* 2/sqrt(pi) */
const c_double M_SQRT2 =    1.41421356237309504880;  /* sqrt(2) */
const c_double M_SQRT1_2 =  0.70710678118654752440;  /* 1/sqrt(2) */

