module csignal;

import c2 local;

// NOTE: incomplete implementation

const c_int SA_NOCLDSTOP = 1;
const c_int SA_RESTART   = 2;

/* Fake signal functions.  */
// TODO
//#define SIG_ERR ((__sighandler_t) -1)       /* Error return.  */
//#define SIG_DFL ((__sighandler_t) 0)        /* Default action.  */
//#define SIG_IGN ((__sighandler_t) 1)        /* Ignore signal.  */

const c_int SIGHUP      = 1;
const c_int SIGINT      = 2;
const c_int SIGQUIT     = 3;
const c_int SIGILL      = 4;
const c_int SIGTRAP     = 5;
const c_int SIGABRT     = 6;
const c_int SIGIOT      = 6;
const c_int SIGBUS      = 7;
const c_int SIGFPE      = 8;
const c_int SIGKILL     = 9;
const c_int SIGUSR1     = 10;
const c_int SIGSEGV     = 11;
const c_int SIGUSR2     = 12;
const c_int SIGPIPE     = 13;
const c_int SIGALRM     = 14;
const c_int SIGTERM     = 15;
const c_int SIGSTKFLT   = 16;
const c_int SIGCLD      = SIGCHLD;
const c_int SIGCHLD     = 17;
const c_int SIGCONT     = 18;
const c_int SIGSTOP     = 19;
const c_int SIGTSTP     = 20;
const c_int SIGTTIN     = 21;
const c_int SIGTTOU     = 22;
const c_int SIGURG      = 23;
const c_int SIGXCPU     = 24;
const c_int SIGXFSZ     = 25;
const c_int SIGVTALRM   = 26;
const c_int SIGPROF     = 27;
const c_int SIGWINCH    = 28;
const c_int SIGPOLL     = SIGIO;
const c_int SIGIO       = 29;
const c_int SIGPWR      = 30;
const c_int SIGSYS      = 31;
const c_int SIGUNUSED   = 31;

type SigactionHandler func void(c_int);
type SigActionAction func void(c_int, Siginfo_t*, void*);
type SigActionRestorer func void();

type Siginfo_t struct {
    char[128] data; // for 64-bit
} @(cname="siginfo_t")

type Sigaction struct {
    SigactionHandler sa_handler;
    SigActionAction sa_sigaction;
    //sigset_t sa_mask;
    c_int sa_flags;
    SigActionRestorer sa_restorer;
}

func c_int sigaction(c_int signum, const Sigaction* act, Sigaction* oldact);

