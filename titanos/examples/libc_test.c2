module libc_test;

import stdio as io;
import string as str;
import strings;
import stdlib as std;
import c_errno;
import ctype;
import regex;

func void test_stdio() {
    io.printf("testing io\n");

    i32 res = io.remove("remove.txt");
    if (res == -1) {
        i32 err = c_errno.errno;
        io.perror("remove");
    }

    res = io.rename("rename.txt", "rename2.txt");
    if (res == -1) {
        io.perror("rename");
    }

    io.FILE* f = io.tmpfile();
    if (f == nil) {
        io.fprintf(io.stderr, "error creating tmpfile\n");
    }
}

func void test_string() {
    io.printf("testing string\n");
    const char* text = "hello";
    u64 len = str.strlen(text);
    io.printf("strlen(%s) = %lu\n", text, len);
}

func void test_strings() {
    i32 i = strings.ffs(0x800);
    io.printf("ffs(0x800) = %d\n", i);
    // TODO
}

func void test_stdlib() {
    io.printf("testing stdlib\n");
    // TODO
}

func void test_ctype() {
    char[] teststr = "n-a´!?:_'/\nc-.,ů§¨%=";
	i32 i = 0;
	char c;
	while (teststr[i]) {
		c = teststr[i];
		if (ctype.isspace(c)) io.puts("testing ctype");
		i++;
	}
}

func void test_regex() {
    regex.Regex_t rx;
    i32 result;

    if (regex.regcomp(&rx, "^a[[:alnum:]]", 0)) {
        io.fprintf(io.stderr, "Regex test failed");
        std.abort();
    }

    result = regex.regexec(&rx, "n-a´!?:_'/\nc-.,ů§¨%=", 0, nil, 0);
    if (!result) {
        io.puts("Match");
    } else if (result == regex.REG_NOMATCH) {
        io.puts("regex test successful");
    }
    regex.regfree(&rx);
}

public func i32 main() {
    test_stdio();
    test_string();
    test_strings();
    test_stdlib();
    test_ctype();
    test_regex();
    return 0;
}

